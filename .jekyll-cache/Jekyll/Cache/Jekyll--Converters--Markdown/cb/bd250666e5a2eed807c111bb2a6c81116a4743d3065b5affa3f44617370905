I"b
<p>There is a container image on Docker Hub (<a href="https://hub.docker.com/r/azch/loadtest">azch/loadtest</a>) that is preconfigured to run the load test. You may run it in <a href="https://azure.microsoft.com/en-us/services/container-instances/">Azure Container Instances</a> running the command below</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az container create <span class="nt">-g</span> &lt;resource-group&gt; <span class="nt">-n</span> loadtest <span class="nt">--image</span> azch/loadtest <span class="nt">--restart-policy</span> Never <span class="nt">-e</span> <span class="nv">SERVICE_ENDPOINT</span><span class="o">=</span>https://&lt;<span class="nb">hostname </span>order capture service&gt;
</code></pre></div></div>

<p>This will fire off a series of increasing loads of concurrent users (100, 400, 1600, 3200, 6400) POSTing requests to your Order Capture API endpoint with some wait time in between to simulate an increased pressure on your application.</p>

<p>You may view the logs of the Azure Container Instance by running the command below.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az container logs <span class="nt">-g</span> &lt;resource-group&gt; <span class="nt">-n</span> loadtest <span class="nt">--follow</span>
</code></pre></div></div>

<p>When you’re done, you may delete it by running</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az container delete <span class="nt">-g</span> &lt;resource-group&gt; <span class="nt">-n</span> loadtest
</code></pre></div></div>

<p>Make note of results (sample below), figure out what is the breaking point for the number of users.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Phase 5: Load test - 30 seconds, 6400 users.

Summary:
  Total:	41.1741 secs
  Slowest:	23.7166 secs
  Fastest:	0.8882 secs
  Average:	9.7952 secs
  Requests/sec:	569.1929

  Total data:	1003620 bytes
  Size/request:	43 bytes

Response time histogram:
  0.888 [1]	|
  3.171 [1669]	|■■■■■■■■■■■■■■
  5.454 [1967]	|■■■■■■■■■■■■■■■■■
  7.737 [4741]	|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
  10.020 [3660]	|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
  12.302 [3786]	|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
  14.585 [4189]	|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
  16.868 [2583]	|■■■■■■■■■■■■■■■■■■■■■■
  19.151 [586]	|■■■■■
  21.434 [151]	|■
  23.717 [7]	|

Status code distribution:
  [200]	23340 responses

Error distribution:
  [96]	Post http://23.96.91.35/v1/order: net/http: request canceled (Client.Timeout exceeded while awaiting headers)
</code></pre></div></div>

<p>You may use the Azure Monitor (previous task) to view the logs and figure out where you need to optimize to increase the throughtput (requests/sec), reduce the average latency and error count.</p>

<p><img src="media/captureorder-loadtest-log.png" alt="Azure Monitor container insights" /></p>

:ET